Problema 1- analizam separat cazurile N=1, respectiv N=2. Pentru N mai mare sau egal cu 3, citim de la tastatura inaltimile copacilor prin variabilele x, y, z si verificam daca y este un copac special, caz in care il adaugam la suma S si verificam daca intervine in schimbarea minimului, respectiv a maximului cerut. Pentru a continua citirea, modificam valorile lui x, y, z astfel incat x sa primeasca valoarea lui y, y sa primeasca noua valoare a lui z, iar z urmeaza sa fie citit. Acest procedeu se repeta pana la terminarea parcurgerii. La final, calculam media aritmetica si afisam rezultatele obtinute, analizand in acelasi timp daca variabilele de maxim si minim si-au schimbat valoarea initiala.

Problema 2- cream inainte de functia main doua functii care calculeaza, pentru un numar N dat, numarul obtinut prin rearanjarea cifrelor sale in ordine descrescatoare (N_descrescator), respectiv in ordine crescatoare (N_crescator). Folosim o variabila "ok" initializata cu 0 si pastram intr-un vector v diferenta dintre N_descrescator si N_crescator, verificand de fiecare data daca diferenta efectuata s-a mai regasit in vector, caz in care variabila ok isi schimba valoarea, iar cautarea se opreste. La final, afisam lungimea secventei care urma sa se repete la infinit, precum si elementele acesteia.

Problema 3- citim de la tastatura atat numarul materiilor, cat si notele obtinute si punctele de credit aferente fiecarei discipline, dupa care cream un vector v in care pe pozitia corespunzatoare materiei i se afla punctele de credit suplimentare pe care elevul le-ar fi putut obtine daca ar fi obtinut nota 10. Ordonam descrescator vectorul, apoi verificam daca la punctajul studentului, prin adaugarea treptata a elementelor din vectorul v se poate obtine un punctaj mai mare sau egal cu punctajul minim, caz in care oprim parcurgerea vectorului si afisam numarul de materii la care acesta trebuie sa isi mareasca nota. In caz contrar, daca la terminarea vectorului de parcurs nu se obtine un punctaj suficient, vom afisa -1.

Problema 4- construim doua functii care verifica daca linia sau coloana citita corespunde cerintelor citite initial si care returneaza valoarea 1, in caz afirmativ, sau 0, in caz contrar. Fiecare functie contruieste un vector care memoreaza numarul secventelor pe pozitia 0, iar pe urmatoarele pozitii lungimea fiecarei secvente, in ordinea in care ele apar. In functia main, pentru fiecare puzzle, citim numarul de linii si coloane, dupa care citim printr-o matrice a pe primele N linii numarul de secvente de pe linia corespunzatoare din puzzle si lungimea fiecarei secvente, iar pe urmatoarele M linii ale matricei a numarul de secvente, respectiv lungimile secventelor corespunzatoare celor M coloane ale puzzle-ului, dupa care citim puzzle-ul prin matricea b. Calculam pentru toate liniile si coloanele matricei b produsul valorilor returnate de functiile de verificare a corespondentei liniilor si coloanelor. Daca produsul este 0, afisam "Eroare", altfel afisam "Corect".  
